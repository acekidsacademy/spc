Next:
- add better ability to handle html select option, etc.
- fix bar plotting
- plotting:
  o add bar plot ability
  o specify x-legend, y-legend
  o specify x-min, x-max, y-min, y-max
- some code for managing the EC2 machine
- move code to load apps into apps.py
- edit app page
- find a way to populate select/option form fields using template
    # http://stackoverflow.com/questions/20444285/how-do-i-populate-a-select-tag-with-flask
    <select name="option" width="300px">
    {% for o in option_list %}
        <option name="{{ o.optid }}" SELECTED>{{ o.optid }}</option>
    </select>

--
Feature Requests
- plotting subsystem
  o plotting system using matplotlib
- info about app page... e.g. intro to importance of Burger's eqn
- JS/Ajax check if appname already exists
- user page/user management: my apps, change passwd, etc.
- file manager... or data button to see data in output files
- implement ConfigParser -- possibly move to supporting INI files
  + generic xml or ini reader
- job scheduler/queuing system
- implement haml templates
- workflow system
- integration to openshift

Bug fixes
- starting from an old case doesnt bring up old case params, but rather defaults
- when form items are disabled by JS they don't show up in the forms data structure
  (fix in apps.write_params() method)
- error when click plot when case id not set... need to warn user beforehand

Refactoring
- CRUD superclass... all models inherit from CRUD superclass
- group common params that get passed to navbar in object?
- cleanup long pathnames such as sim_dir, run_dir, and fn in 
  apps.py and scipaas.py

Tests
- test that when file unzips the unzipped directory is the same
  as the zip file name
- if click list when directory doesnt exist >> error 405
- if click Upload but file not first selected >> error
- upload verify works with .in and exe file
- verify throws error with no .in file
- verify throws error with no exe file
- test if writing parameters correctly especially test booleans, integers,
  strings, etc.

Completed
- add ability to reload parameters from old case
- when click confirm show input file
- add UID 
- continuous updating of screen output: Ajax or built-in alternative
  + data monitoring system: ajax and python-based
- add footer
- add jobs button
- job scheduler/queuing system
- case management
- app management: update, delete, and finish add section
  o move 
  o upload
    > verify that upload contains the necessary files (e.g. .in & binary)
    > hook into scipaas... dynamic importing 
  o app deployment (egg format/zip file)
  o rename app
  o put different app categories into database
- add ability to handle multiple plots
- real-time data monitor
